{
  "openapi": "3.0.0",
  "info": {
    "title": "Dotos! documentation",
    "description": "This is a simple todo API.",
    "version": "1.0.0",
    "contact": {
      "email": "gessiomorin@gmail.com"
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "Account creation and management."
    },
    {
      "name": "Todos",
      "description": "Todos CRUD."
    }
  ],
  "paths": {
    "/account": {
      "post": {
        "tags": ["Account"],
        "summary": "Account creation",
        "description": "Creates an account using email, name and password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "john@email.com",
                  "password": "pswd123"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Accounted created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/signupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email already registered or some information is missing.",
            "content": {
              "application/json": {
                "examples": {
                  "Email already registered": {
                    "value": {
                      "message": "Email already registered."
                    }
                  },
                  "Invalid information was provided": {
                    "value": {
                      "message": "You must provide required information."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/login": {
      "post": {
        "tags": ["Account"],
        "summary": "Login route",
        "description": "Logs in using email and password and returns an access token and a refresh token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "required": true
                  }
                },
                "example": {
                  "email": "john@email.com",
                  "password": "pswd123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeded login.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid email or password."
                }
              }
            }
          }
        }
      }
    },
    "/account/refresh": {
      "post": {
        "tags": ["Account"],
        "summary": "Refresh token route",
        "description": "Sends a refresh token and, if valid, receives an access token and a new refresh token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "example": {
                  "refreshToken": "0d52a60e-39bd-4c22-b0cc-4904bdc92ba4"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed. User receives an access token and a new refresh token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/refreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Refresh token not found, please authenticate again."
                }
              }
            }
          },
          "403": {
            "description": "Refresh token is valid but it is expired. User needs to log in again.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Refresh token expired, please authenticate again."
                }
              }
            }
          }
        }
      }
    },
    "/account/recover-password": {
      "post": {
        "tags": ["Account"],
        "summary": "Password recovery route",
        "description": "Uses email to generate a token, sent to user email, to change the password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "john@email.com"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email for password recovery has been sent."
          },
          "400": {
            "description": "Email not found.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email not found."
                }
              }
            }
          }
        }
      }
    },
    "/account/change-password/{token}": {
      "post": {
        "tags": ["Account"],
        "summary": "Password recovery route",
        "description": "Uses email to generate a token, sent to user email, to change the password.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Recover password token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  }
                },
                "example": {
                  "newPassword": "pswd1234"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Password changed."
          },
          "401": {
            "description": "Invalid token.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid token."
                }
              }
            }
          },
          "403": {
            "description": "Expired token.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Token expired."
                }
              }
            }
          }
        }
      }
    },
    "/todos": {
      "post": {
        "tags": ["Todos"],
        "summary": "Todos creation",
        "description": "Creates a new todo.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "required": true
                  },
                  "is_completed": {
                    "type": "boolean",
                    "required": false
                  },
                  "due_to": {
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  }
                },
                "example": {
                  "content": "My first todo",
                  "is_completed": false,
                  "due_to": "2022-07-07T23:00:44.961Z"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/todo"
                }
              }
            }
          },
          "400": {
            "description": "Todo content must be provided.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Todo content is required."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Todos"],
        "summary": "Get todos.",
        "description": "Get all todos an account owns.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "All todos received.",
            "content": {
              "application/json": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/todo"
                }
              }
            }
          },
          "401": {
            "description": "Token not received, expired or invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "Token not received": {
                    "value": {
                      "message": "Token not received."
                    }
                  },
                  "Token expired": {
                    "value": {
                      "message": "Expired token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "message": "Invalid token."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "get": {
        "tags": ["Todos"],
        "summary": "Get an unique todo.",
        "description": "Get a todo using its id.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Todo's ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo was received.",
            "content": {
              "application/json": {
                "type": "object",
                "schema": {
                  "$ref": "#/definitions/todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid uuid was sent.",
            "content": {
              "application/json": {
                "type": "object",
                "example": {
                  "message": "Invalid uuid."
                }
              }
            }
          },
          "401": {
            "description": "Token not received, expired or invalid.",
            "content": {
              "application/json": {
                "examples": {
                  "Token not received": {
                    "value": {
                      "message": "Token not received."
                    }
                  },
                  "Token expired": {
                    "value": {
                      "message": "Expired token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "message": "Invalid token."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account is not the owner of the todo.",
            "content": {
              "application/json": {
                "type": "object",
                "example": {
                  "message": "Not allowed."
                }
              }
            }
          },
          "404": {
            "description": "A todo with that id was not found.",
            "content": {
              "application/json": {
                "type": "object",
                "example": {
                  "message": "Todo not found."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "signupResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "refreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "todo": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "format": "uuid" },
        "is_completed": { "type": "boolean" },
        "content": { "type": "string" },
        "due_to": { "type": "string", "format": "date-time" },
        "created_at": { "type": "string", "format": "date-time" }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
